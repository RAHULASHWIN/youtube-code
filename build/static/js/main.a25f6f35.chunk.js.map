{"version":3,"sources":["components/Youtube.js","components/Editor.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["finalURL","Youtube","props","state","resultyt","clicked","bind","fetch","then","response","json","responseJson","items","map","obj","id","videoId","setState","catch","error","console","log","this","onClick","className","style","width","height","link","i","src","frameBorder","allowFullScreen","frame","Component","Editor","frameborder","marginwidth","marginheight","allowfullscreen","Navbar","App","Container","Row","Col","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRASIA,EAAQ,2DAJA,0CAIA,sBAHM,2BAGN,kDAFG,IA6EAC,E,kDArEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,SAAU,IAEZ,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBANE,E,2CAQnB,WAAW,IAAD,OACRC,MAAMP,GACHQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,IAAMP,EAAWO,EAAaC,MAAMC,KAClC,SAACC,GAAD,MAAS,iCAAmCA,EAAIC,GAAGC,WAErD,EAAKC,SAAS,CAAEb,gBAEjBc,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,oBAIpB,WAKE,OAFAC,QAAQC,IAAIC,KAAKnB,MAAMC,UAGrB,gCAKG,wBAAQmB,QAASD,KAAKjB,QAASmB,UAAU,OAAzC,gCAOH,eAAC,aAAD,CAAYA,UAAU,QAAQC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,KAA3D,UAGE,uBACCL,KAAKnB,MAAMC,SAASS,KAAI,SAACe,EAAMC,GAc9B,OAbAT,QAAQC,IAAIO,GAEV,qBAAaJ,UAAU,UAAvB,SACE,wBACEE,MAAM,MACNC,OAAO,MACPG,IAAKF,EACLG,YAAY,IACZC,iBAAe,KANTH,MAabP,KAAKW,gB,GA9DQC,aCMPC,MAjBf,WACE,OACE,8BACE,wBACEL,IAAI,gFACJJ,MAAM,OACNC,OAAO,MACPS,YAAY,IACZC,YAAY,IACZC,aAAa,IACbC,iBAAe,EACff,UAAU,W,wBCDHgB,MAVf,WACI,OAEE,qBAAKhB,UAAU,MAAf,SACM,oBAAIA,UAAU,OAAd,6BCwBGiB,MAzBf,WACE,OACE,sBAAKjB,UAAU,QAAf,UACA,cAAC,EAAD,IACE,eAACkB,EAAA,EAAD,WACA,uBACE,eAACC,EAAA,EAAD,WAGE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,MAKF,cAACA,EAAA,EAAD,UACE,cAAC,EAAD,gBCVGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a25f6f35.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport '../components/Youtube.css'\r\n\r\n// const API = \"AIzaSyDnCQmXrQwLd6VmNLD9D7Ve3YVwf2XYhSc&channelId=10\"\r\nconst API = \"AIzaSyDnCQmXrQwLd6VmNLD9D7Ve3YVwf2XYhSc\";\r\nconst channelID = \"UCXgGY0wkgOzynnHvSEVmE3A\";\r\nconst result = 10;\r\n\r\nvar finalURL = `https://www.googleapis.com/youtube/v3/search?key=${API}&channelId=${channelID}&part=snippet,id&order=date&maxResults=${result}`;\r\n// var React = require(\"react\");\r\n// var ReactDOM = require(\"react-dom\");\r\n//var ScrollArea = require(\"react-scrollbar\");\r\n\r\nclass Youtube extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      resultyt: [],\r\n    };\r\n    this.clicked = this.clicked.bind(this);\r\n  }\r\n  clicked() {\r\n    fetch(finalURL)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        // console.log(responseJson);\r\n        const resultyt = responseJson.items.map(\r\n          (obj) => \"https://www.youtube.com/embed/\" + obj.id.videoId\r\n        );\r\n        this.setState({ resultyt });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    // console.log(finalURL);\r\n   \r\n    console.log(this.state.resultyt);\r\n\r\n    return (\r\n      <div>\r\n\r\n        \r\n       \r\n       \r\n         <button onClick={this.clicked} className=\"poda\">Get youtube videos</button>\r\n      \r\n      \r\n      \r\n      \r\n    \r\n      \r\n      <Scrollbars className=\"rahul\" style={{ width: 600, height: 650 }}>\r\n      {/* <div className=\"left\"> */}\r\n     \r\n        <br />\r\n        {this.state.resultyt.map((link, i) => {\r\n          console.log(link);\r\n          var frame = (\r\n            <div key={i} className=\"youtube\">\r\n              <iframe\r\n                width=\"660\"\r\n                height=\"700\"\r\n                src={link}\r\n                frameBorder=\"0\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            </div>\r\n          \r\n          );\r\n          return frame;\r\n        })}\r\n        {this.frame}\r\n      {/* </div> */}\r\n      </Scrollbars>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Youtube;\r\n","import React from \"react\";\r\nimport '../components/Youtube.css'\r\n\r\nfunction Editor() {\r\n  return (\r\n    <div>\r\n      <iframe\r\n        src=\"https://trinket.io/embed/python/36f8e1b874?start=result&showInstructions=true\"\r\n        width=\"140%\"\r\n        height=\"700\"\r\n        frameborder=\"0\"\r\n        marginwidth=\"0\"\r\n        marginheight=\"0\"\r\n        allowfullscreen\r\n        className=\"yow\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import React from 'react'\r\nimport '../components/Youtube.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n\r\n      <div className=\"yab\">\r\n            <h1 className=\"haha\">Youtube-code</h1>\r\n      </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import \"./App.css\";\nimport Youtube from \"./components/Youtube.js\";\nimport Editor from \"./components/Editor.js\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Navbar from './components/Navbar'\n\nfunction App() {\n  return (\n    <div className=\"rahul\">\n    <Navbar />\n      <Container>\n      <br />\n        <Row>\n        {/* This is for the youtube search engine. */}\n       \n          <Col>\n            <Youtube />\n          </Col>\n       \n          {/* This is for the connection of editor in the sidebar. */ }\n        \n          <Col>\n            <Editor />\n          </Col>\n         \n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}